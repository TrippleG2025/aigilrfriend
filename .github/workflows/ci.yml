name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Backend (Python) ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install backend deps (with wheel fallback)
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          # Normale Installation:
          python -m pip install -r requirements.txt || true
          # Fallback: offline wheels falls Internet/Proxy hakt
          if [ -d vendor/wheels ]; then
            python -m pip install --no-index --find-links vendor/wheels httpx pytest-asyncio || true
          fi

      - name: Seed DB for tests
        working-directory: backend
        run: |
          python scripts/seed_for_test.py || python scripts/seed_for_tests.py

      - name: Run backend tests (JUnit)
        working-directory: backend
        run: |
          mkdir -p test-results
          pytest -q --junitxml=test-results/pytest-junit.xml

      - name: Upload backend junit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-junit
          path: backend/test-results/pytest-junit.xml

      # ---------- Frontend (optional, aktuell ohne echte Tests) ----------
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install & build frontend
        working-directory: frontend
        run: |
          npm ci || npm install
          npm run build || true

      - name: Upload frontend dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
